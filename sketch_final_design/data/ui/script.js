function onRequest(e,t,n){var a=new XMLHttpRequest;a.addEventListener("load",function(){n(JSON.parse(this.responseText))}),a.open(t.method,e),t.params&&a.setRequestHeader("Content-Type","application/x-www-form-urlencoded"),a.send(t.params||null)}function getMeasurementValues(e){const t=`/api/${e}`;return new Promise((e,n)=>{onRequest(t,{method:"GET"},function(t){e(t)})})}function changeConfig(e,t,n){const a=`/api/${e}/${t}`;return new Promise((e,t)=>{onRequest(a,{method:"POST",params:n},function(t){e(t)})})}function getAllFilesFromStorage(){return new Promise((e,t)=>{onRequest("/api/files/all",{method:"GET"},function(t){e(t)})})}function getFileFromStorage(e){const t=`filename=${e}`;return new Promise((e,n)=>{onRequest("/api/files/get",{method:"POST",params:t},function(t){e(t.content)})})}async function deleteFlash(){const e={success:!0};return new Promise((t,n)=>{setTimeout(()=>{t(e)},4e3)})}const endpoints={getMeasurementValues:getMeasurementValues,changeConfig:changeConfig,getAllFilesFromStorage:getAllFilesFromStorage,getFileFromStorage:getFileFromStorage,deleteFlash:deleteFlash};function renderLoader(e,t){const n=document.createElement("div");return n.classList.add("loader"),n.classList.add(`loader-${e}`),n.classList.add(`loader_${t}`),n}let intervalRates={temp:void 0,humi:void 0},poolingIntervalIDs={temp:void 0,humi:void 0},isFirstCall={temp:!0,humi:!0},isAJAXCallInProgress={temp:!1,humi:!1};async function renderMeasurementValues(e){if(!isAJAXCallInProgress[e]){let t;isAJAXCallInProgress[e]=!0,isFirstCall[e]?(t=document.querySelector(`.content--loading#content_${e}`)).appendChild(renderLoader("large",e)):(t=document.getElementsByClassName(`loader_current_${e}`)[0])&&t.appendChild(renderLoader("small",e));const n=await endpoints.getMeasurementValues(e);if(isFirstCall[e]){t.classList.remove("content--loading");const n=t.getElementsByClassName(`loader loader_${e}`)[0];n&&n.remove(),isFirstCall[e]=!1}else t.innerHTML="";isAJAXCallInProgress[e]=!1,renderTabMeasurements(n,e),intervalRates[e]!==n.config.rate&&onSetCurrentInterval(e,n.config.rate)}}function renderTabMeasurements(e,t){if(document.getElementById(`measure_${t}_current`).innerHTML=e.current.value,document.getElementById(`measure_${t}_current_timestamp`).innerHTML=e.current.timestamp,e.means&&e.means.forEach((e,n)=>{const a=document.getElementById(`measure_${t}_mean${n}`);if(e.value){document.getElementById(`measure_${t}_mean${n}_value`).innerHTML=e.value,a.style.display="list-item"}else a.style.display="none"}),e.recordMax){document.getElementById(`measure_${t}_max`).innerHTML=e.recordMax.value,document.getElementById(`measure_${t}_max_timestamp`).innerHTML=e.recordMax.timestamp}if(e.recordMin){document.getElementById(`measure_${t}_min`).innerHTML=e.recordMin.value,document.getElementById(`measure_${t}_min_timestamp`).innerHTML=e.recordMin.timestamp}const n=document.getElementById(`alarm_led_${t}`);e.alarm?n.classList.add("alarm-on"):n.classList.remove("alarm-on")}function onSetCurrentInterval(e,t){intervalRates[e]=t,poolingIntervalIDs[e]=setInterval(()=>renderMeasurementValues(e),1e3*intervalRates[e])}function onUpdateCurrentInterval(e,t){intervalRates[e]=t,clearInterval(poolingIntervalIDs[e]),poolingIntervalIDs[e]=setInterval(()=>renderMeasurementValues(e),1e3*intervalRates[e])}async function onSubmitConfig(e,t){const n=document.getElementById(`config_${e}_${t}`),a=`value=${n.value}`;if("thres"===t){const e=Number(n.value);if(!e||e<0||e>100)return void alert("Value must be between 0 and 100")}const o=await endpoints.changeConfig(e,t,a);if(o.success){"rate"==t&&onUpdateCurrentInterval(e,o.value);const n=document.getElementById(`config_${e}_${t}_value`);n&&(n.innerHTML=o.value)}}renderMeasurementValues("temp"),renderMeasurementValues("humi");const tempRateSubmitBtn=document.getElementById("config_temp_rate_submit"),humiRateSubmitBtn=document.getElementById("config_humi_rate_submit");tempRateSubmitBtn.addEventListener("click",()=>onSubmitConfig("temp","rate")),humiRateSubmitBtn.addEventListener("click",()=>onSubmitConfig("humi","rate"));const tempThresSubmitBtn=document.getElementById("config_temp_thres_submit"),humiThresSubmitBtn=document.getElementById("config_humi_thres_submit");tempThresSubmitBtn.addEventListener("click",()=>onSubmitConfig("temp","thres")),humiThresSubmitBtn.addEventListener("click",()=>onSubmitConfig("humi","thres"));const fileIcon='\n    <svg height="18px" viewBox="0 0 24 24" width="18px" fill="#004">\n        <path d="M0 0h24v24H0V0z" fill="none"/>\n        <path d="M8 16h8v2H8zm0-4h8v2H8zm6-10H6c-1.1 0-2 .9-2 2v16c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8l-6-6zm4 18H6V4h7v5h5v11z"/>\n    </svg>\n';async function onFetchStorageFiles(){const e=document.getElementById("storage_nav_list");e.appendChild(renderLoader("medium"));const t=await endpoints.getAllFilesFromStorage();e.innerHTML="",t.forEach(t=>{const n=document.createElement("li");n.classList.add("storage_nav_list_el"),n.setAttribute("name",t),n.innerHTML=fileIcon+t,n.addEventListener("click",onFetchFileContent),e.appendChild(n)})}async function onFetchFileContent(e){const t=e.currentTarget;if(!t.classList.contains("storage_nav_list_el--selected")){const e=document.getElementById("storage_nav_list");for(let t=0;t<e.children.length;t++)e.children[t].classList.remove("storage_nav_list_el--selected");t.classList.add("storage_nav_list_el--selected");const n=document.getElementById("storage_display");n.innerHTML="",n.appendChild(renderLoader("medium")),n.classList.add("storage_display--no-file");const a=t.getAttribute("name"),o=await endpoints.getFileFromStorage(a);n.innerHTML="",n.classList.remove("storage_display--no-file"),n.innerHTML=o}}function onMountStorage(){const e=document.getElementById("storage_display");e.innerHTML="Select a file to view its contents",e.classList.add("storage_display--no-file"),document.getElementById("storage_nav_list").innerHTML="",onFetchStorageFiles()}async function onStorageDelete(){if(confirm("Are you sure you want to delete the entire flash?")){const e=document.getElementById("storage_nav_list");e.appendChild(renderLoader("medium")),await endpoints.deleteFlash(),e.innerHTML="",await onFetchStorageFiles()}}const storageDeleteEl=document.getElementById("storage_delete");storageDeleteEl.addEventListener("click",onStorageDelete);const localStorage=window.localStorage,LOCAL_STORAGE_KEY_TAB="WEATHER_STATION_TAB",tabButtons={temp:document.querySelector("[data-tab-id=temp]"),humi:document.querySelector("[data-tab-id=humi]"),storage:document.querySelector("[data-tab-id=storage]")},tabContents={temp:document.querySelector("#content_temp"),humi:document.querySelector("#content_humi"),storage:document.querySelector("#content_storage")};function onMountTab(e){switch(e){case"storage":onMountStorage()}}function setTab(e){Object.keys(tabContents).forEach(t=>{t===e?(tabContents[t].classList.remove("content--hidden"),tabButtons[t].classList.add("container_tabs_el--selected")):(tabContents[t].classList.add("content--hidden"),tabButtons[t].classList.remove("container_tabs_el--selected"))}),localStorage.setItem(LOCAL_STORAGE_KEY_TAB,e),onMountTab(e)}function onInit(){let e=localStorage.getItem(LOCAL_STORAGE_KEY_TAB);null===e&&(e="temp"),setTab(e)}tabButtons.temp.onclick=function(){setTab("temp")},tabButtons.humi.onclick=function(){setTab("humi")},tabButtons.storage.onclick=function(){setTab("storage")},onInit();